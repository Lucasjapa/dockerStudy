#  The top-level version property is defined by the Compose Specification for
#  backward compatibility. It is only informative and you'll receive a warning
#  message that it is obsolete if used.
#
#  Compose doesn't use version to select an exact schema to validate the Compose file,
#  but prefers the most recent schema when it's implemented.
#
#  Compose validates whether it can fully parse the Compose file. If some fields are
#  unknown, typically because the Compose file was written with fields defined by a newer
#  version of the Specification, you'll receive a warning message.

#version: "3.8"

name: myapp

services:
  mongodb:
    image: 'mongo'
    volumes:
      - data:/data/db
    container_name: mongodb
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: max
#      MONGO_INITDB_ROOT_PASSWORD: secret
#      - MONGO_INIT_DB_ROOT_USERNAME=max
    env_file:
      - ./env/mongo.env

  backend:
    build: ./backend
#    build:
#      context: ./backend
#      dockerfile: Dockerfile
#       args:
#         some_arg: 1
    ports:
      - '80:80'
    volumes:
      - logs:/app/logs
      - ./backend:/app
      - /app/node_modules
    env_file:
      - ./env/backend.env
    depends_on:
      - mongodb

  frontend:
    build: ./frontend
    ports:
      - '3000:3000'
    volumes:
      - ./frontend/src:/app/src
#   stdin_open: Mantém o terminal de entrada aberto, permitindo interações futuras.
#    stdin_open: true
#   tty: Aloca um terminal para o contêiner, permitindo interações e execuções de comandos que requerem um ambiente de terminal.
#    tty: true
    depends_on:
      - backend

volumes:
  data:
  logs: